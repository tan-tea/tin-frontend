import './globals.css';

import 'reflect-metadata';

import {
    FC,
    ReactNode,
    ReactElement,
} from 'react';
import {
    type Viewport,
    type Metadata,
} from 'next';
import {
    Poppins,
    Raleway,
} from 'next/font/google';
import { getLocale, } from 'next-intl/server';
import { NextIntlClientProvider, } from 'next-intl';
import { AppRouterCacheProvider, } from '@mui/material-nextjs/v15-appRouter';

import AppProviderLayout from 'layout/AppProviderLayout';

export const metadata: Metadata = {
    title: {
        default: 'My App',
        template: '%s | My App',
    },
    description: 'Generated by create next app',
    authors: [
        {
            name: 'Brian Castro Bedoya',
            url: 'https://github.com/briancastro-bc',
        },
    ],
};

export const viewport: Viewport = {
    themeColor: [
        {
            media: '(prefers-color-scheme: light)',
            color: '#000000',
        },
        {
            media: '(prefers-color-scheme: dark)',
            color: '#ffffff',
        },
    ],
    userScalable: true,
};

const poppins = Poppins({
    subsets: ['latin',],
    display: 'swap',
    weight: ['100', '200', '300', '400', '500', '600', '700', '800', '900',],
    variable: '--font-primary',
});

const raleway = Raleway();

type RootLayoutProps = {
    children: ReactNode;
};

export default async function RootLayout(
    props: RootLayoutProps
): Promise<ReactElement<FC<RootLayoutProps>>> {
    const {
        children,
    } = props;

    const locale = await getLocale();

    return (
        <html
            lang={locale}
            translate='no'
            suppressHydrationWarning
            className={`${poppins.className} ${raleway.className}`}
        >
            <body className='isolate'>
                <NextIntlClientProvider>
                    <AppRouterCacheProvider
                        options={{
                            key: 'css',
                            enableCssLayer: true,
                        }}
                    >
                        <AppProviderLayout>
                            {children}
                        </AppProviderLayout>
                    </AppRouterCacheProvider>
                </NextIntlClientProvider>
            </body>
        </html>
    );
};
